/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 * Author:  user2
 * Created: 08.12.2016
 */

-- v3.00.0 - v3.00.1


CREATE TABLE BONUSTICKETS (
    TICKET VARCHAR NOT NULL,
    MONEY VARCHAR NOT NULL,
    PERSON VARCHAR NOT NULL,
    PAYMENTTOTAL DOUBLE PRECISION NOT NULL,
    BONUS DOUBLE PRECISION NOT NULL,
    PRIMARY KEY(TICKET),
    CONSTRAINT BONUSTICKETS_FK_1 FOREIGN KEY (TICKET) REFERENCES TICKETS(ID),
    CONSTRAINT BONUSTICKETS_FK_2 FOREIGN KEY (MONEY) REFERENCES CLOSEDCASH(MONEY),
    CONSTRAINT BONUSTICKETS_FK_3 FOREIGN KEY (PERSON) REFERENCES PEOPLE(ID)
);
CREATE INDEX BONUSTICKETS_INX ON BONUSTICKETS (MONEY, PERSON);

CREATE TABLE BONUSHISTORY (
    ID VARCHAR NOT NULL,
    MONEY VARCHAR NOT NULL,
    PERSON VARCHAR NOT NULL,
    DAILYSALES DOUBLE PRECISION,
    DAILYBONUS DOUBLE PRECISION,
    PRIMARY KEY(ID),
    CONSTRAINT BONUSHISTORY_FK_1 FOREIGN KEY (MONEY) REFERENCES CLOSEDCASH(MONEY),
    CONSTRAINT BONUSHISTORY_FK_2 FOREIGN KEY (PERSON) REFERENCES PEOPLE(ID)
);
CREATE INDEX BONUSHISTORY_INX ON BONUSHISTORY (MONEY, PERSON);

CREATE TABLE TEAMBONUSSESSION (
    ID VARCHAR NOT NULL,
    TBSEQUENCE INTEGER NOT NULL,
    DATESTART TIMESTAMP NOT NULL,
    DATEEND TIMESTAMP,
    TEAMBONUSSALES DOUBLE PRECISION,
    TEAMBONUS DOUBLE PRECISION,
    PRIMARY KEY(ID)
);
CREATE UNIQUE INDEX TEAMBONUSSESSION_INX_ID ON TEAMBONUSSESSION (ID);
CREATE INDEX TEAMBONUSSESSION_INX_DATES ON TEAMBONUSSESSION (DATESTART, DATEEND);

CREATE TABLE TEAMBONUSSESSIONMONEY (
    ID VARCHAR NOT NULL,
    TBS_ID VARCHAR NOT NULL,
    MONEY VARCHAR NOT NULL,
    PRIMARY KEY(ID),
    CONSTRAINT TEAMBONUSSESSIONMONEY_FK_1 FOREIGN KEY (TBS_ID) REFERENCES TEAMBONUSSESSION(ID),
    CONSTRAINT TEAMBONUSSESSIONMONEY_FK_2 FOREIGN KEY (MONEY) REFERENCES CLOSEDCASH(MONEY)
);
CREATE INDEX TEAMBONUSSESSIONMONEY_INX_TBSID ON TEAMBONUSSESSIONMONEY (TBS_ID);

CREATE TABLE TEAMBONUSSESSIONPERSON (
    ID VARCHAR NOT NULL,
    TBS_ID VARCHAR NOT NULL,
    PERSON VARCHAR NOT NULL,
    TEAMBONUSFORPERSON DOUBLE PRECISION,
    PRIMARY KEY(ID),
    CONSTRAINT TEAMBONUSSESSIONPERSON_FK_1 FOREIGN KEY (TBS_ID) REFERENCES TEAMBONUSSESSION(ID),
    CONSTRAINT TEAMBONUSSESSIONPERSON_FK_2 FOREIGN KEY (PERSON) REFERENCES PEOPLE(ID)
);
CREATE INDEX TEAMBONUSSESSIONPERSON_INX ON TEAMBONUSSESSIONPERSON (TBS_ID, PERSON);

CREATE TABLE TEAMBONUSCONFIGHOSTS (
    HOST VARCHAR,
    PRIMARY KEY(HOST)
);

CREATE TABLE BONUSCONFIGROLES (
    ROWNUMBER INT NOT NULL,
    ROLE_ID VARCHAR NOT NULL,
    INDIVBONUS_FROM_SALES DOUBLE PRECISION,
    SESSION_INDIV_PLAN DOUBLE PRECISION,
    TEAMBONUS_FROM_SALES DOUBLE PRECISION,
    TEAMBONUS_COEF DOUBLE PRECISION,
    TBSESSION_TEAM_PLAN DOUBLE PRECISION,   
    PRIMARY KEY (ROLE_ID)
);
CREATE UNIQUE INDEX BONUSCONFIGROLES_NAME_INX ON BONUSCONFIGROLES(ROLE_ID);
INSERT INTO BONUSCONFIGROLES(ROWNUMBER, ROLE_ID, INDIVBONUS_FROM_SALES, SESSION_INDIV_PLAN, TEAMBONUS_FROM_SALES, TEAMBONUS_COEF, TBSESSION_TEAM_PLAN) VALUES (1, '0', 0.0, 0.0, 0.01, 0.0, 150000.0);
INSERT INTO BONUSCONFIGROLES(ROWNUMBER, ROLE_ID, INDIVBONUS_FROM_SALES, SESSION_INDIV_PLAN, TEAMBONUS_FROM_SALES, TEAMBONUS_COEF, TBSESSION_TEAM_PLAN) VALUES (2, '1', 0.0, 0.0, 0.0, 0.0, 0.0);
INSERT INTO BONUSCONFIGROLES(ROWNUMBER, ROLE_ID, INDIVBONUS_FROM_SALES, SESSION_INDIV_PLAN, TEAMBONUS_FROM_SALES, TEAMBONUS_COEF, TBSESSION_TEAM_PLAN) VALUES (3, '2', 0.01, 25000.0, 0.0, 1.0, 0.0);
INSERT INTO BONUSCONFIGROLES(ROWNUMBER, ROLE_ID, INDIVBONUS_FROM_SALES, SESSION_INDIV_PLAN, TEAMBONUS_FROM_SALES, TEAMBONUS_COEF, TBSESSION_TEAM_PLAN) VALUES (4, '3', 0.01, 25000.0, 0.0, 1.0, 0.0);


-- v3.00.1 - v3.00.2

-- final script

CREATE UNIQUE INDEX CLOSEDCASH_INX_MONEY ON CLOSEDCASH (MONEY);

CREATE TABLE _ROLES (                                                                                                                  
    ID VARCHAR NOT NULL, 
    ROWNUMBER INT NOT NULL, 
    BONUS_FROM_SALES DOUBLE PRECISION,
    SESSION_PLAN DOUBLE PRECISION,
    TEAMBONUS_COEF DOUBLE PRECISION,
    NAME VARCHAR NOT NULL,
    PERMISSIONS BYTEA,
    PRIMARY KEY (ID));

INSERT INTO _ROLES (ID, ROWNUMBER, BONUS_FROM_SALES, SESSION_PLAN,  TEAMBONUS_COEF,  NAME, PERMISSIONS) SELECT B.ROLE_ID, B.ROWNUMBER, B.INDIVBONUS_FROM_SALES, B.SESSION_INDIV_PLAN,  B.TEAMBONUS_COEF,  R.NAME, R.PERMISSIONS FROM BONUSCONFIGROLES B, ROLES R WHERE B.ROLE_ID = R.ID;

ALTER TABLE PEOPLE DROP CONSTRAINT PEOPLE_FK_1;
DROP TABLE ROLES;

CREATE TABLE ROLES (                                                                                                                  
    ID VARCHAR NOT NULL, 
    ROWNUMBER INT NOT NULL, 
    BONUS_FROM_SALES DOUBLE PRECISION,
    SESSION_PLAN DOUBLE PRECISION,
    TEAMBONUS_COEF DOUBLE PRECISION,
    NAME VARCHAR NOT NULL,
    PERMISSIONS BYTEA,
    PRIMARY KEY (ID));
INSERT INTO ROLES (ID, ROWNUMBER, BONUS_FROM_SALES, SESSION_PLAN,  TEAMBONUS_COEF, NAME, PERMISSIONS) SELECT ID, ROWNUMBER, BONUS_FROM_SALES, SESSION_PLAN,  TEAMBONUS_COEF,  NAME, PERMISSIONS FROM _ROLES;
INSERT INTO ROLES(ROWNUMBER, ID, BONUS_FROM_SALES, SESSION_PLAN, TEAMBONUS_COEF, NAME, PERMISSIONS) VALUES(5, 'TEAMBONUSCONFIG', 0.01, 175000.0, 0.0, 'Teambonus configuration role', $FILE{/com/openbravo/pos/templates/Role.Teambonus.xml} );
UPDATE ROLES SET PERMISSIONS = $FILE{/com/openbravo/pos/templates/Role.Administrator.xml} WHERE ID = '0';
UPDATE RESOURCES SET CONTENT = $FILE{/com/openbravo/pos/templates/Menu.Root.txt} WHERE ID = '14';
--UPDATE ROLES SET BONUS_FROM_SALES = (SELECT TEAMBONUS_FROM_SALES FROM BONUSCONFIGROLES WHERE ID = '0') WHERE ID = 'TEAMBONUSCONFIG';
--UPDATE ROLES SET SESSION_PLAN = (SELECT TBSESSION_TEAM_PLAN FROM BONUSCONFIGROLES WHERE ID = '0') WHERE ID = 'TEAMBONUSCONFIG';

DROP TABLE _ROLES;
ALTER TABLE PEOPLE ADD CONSTRAINT PEOPLE_FK_1 FOREIGN KEY (ROLE) REFERENCES ROLES(ID);

DROP TABLE BONUSCONFIGROLES;
UPDATE APPLICATIONS SET NAME = $APP_NAME{}, VERSION = $APP_VERSION{} WHERE ID = $APP_ID{};
